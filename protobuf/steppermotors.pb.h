/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.4 */

#ifndef PB_PROTO_FILES_STEPPERMOTORS_PB_H_INCLUDED
#define PB_PROTO_FILES_STEPPERMOTORS_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _pb_motors_ChangeState {
    pb_motors_ChangeState_YES = 0,
    pb_motors_ChangeState_NO = 1
} pb_motors_ChangeState;

typedef enum _pb_motors_MotorCommand {
    pb_motors_MotorCommand_DRIVE = 0,
    pb_motors_MotorCommand_HALT = 1,
    pb_motors_MotorCommand_XMAX = 2,
    pb_motors_MotorCommand_YMAX = 3,
    pb_motors_MotorCommand_ZMAX = 4,
    pb_motors_MotorCommand_XMIN = 5,
    pb_motors_MotorCommand_YMIN = 6,
    pb_motors_MotorCommand_ZMIN = 7
} pb_motors_MotorCommand;

typedef enum _pb_motors_MotorName {
    pb_motors_MotorName_X = 0,
    pb_motors_MotorName_Y = 1,
    pb_motors_MotorName_Z = 2
} pb_motors_MotorName;

typedef enum _pb_motors_MotorDir {
    pb_motors_MotorDir_CC = 0,
    pb_motors_MotorDir_CCW = 1
} pb_motors_MotorDir;

/* Struct definitions */
typedef struct _pb_motors_MotorX {
    bool has_chgstate;
    pb_motors_ChangeState chgstate;
    bool has_cmd;
    pb_motors_MotorCommand cmd;
    bool has_motorname;
    pb_motors_MotorName motorname;
    bool has_dir;
    pb_motors_MotorDir dir;
    bool has_steps;
    int32_t steps;
    bool has_rpm;
    int32_t rpm;
} pb_motors_MotorX;

typedef struct _pb_motors_MotorY {
    bool has_chgstate;
    pb_motors_ChangeState chgstate;
    bool has_cmd;
    pb_motors_MotorCommand cmd;
    bool has_motorname;
    pb_motors_MotorName motorname;
    bool has_dir;
    pb_motors_MotorDir dir;
    bool has_steps;
    int32_t steps;
    bool has_rpm;
    int32_t rpm;
} pb_motors_MotorY;

typedef struct _pb_motors_MotorZ {
    bool has_chgstate;
    pb_motors_ChangeState chgstate;
    bool has_cmd;
    pb_motors_MotorCommand cmd;
    bool has_motorname;
    pb_motors_MotorName motorname;
    bool has_dir;
    pb_motors_MotorDir dir;
    bool has_steps;
    int32_t steps;
    bool has_rpm;
    int32_t rpm;
} pb_motors_MotorZ;

typedef struct _pb_motors {
    char msgversion[8];
    bool has_timestamp;
    char timestamp[64];
    bool has_manualmove;
    bool manualmove;
    bool has_motorx;
    pb_motors_MotorX motorx;
    bool has_motory;
    pb_motors_MotorY motory;
    bool has_motorz;
    pb_motors_MotorZ motorz;
} pb_motors;


/* Helper constants for enums */
#define _pb_motors_ChangeState_MIN pb_motors_ChangeState_YES
#define _pb_motors_ChangeState_MAX pb_motors_ChangeState_NO
#define _pb_motors_ChangeState_ARRAYSIZE ((pb_motors_ChangeState)(pb_motors_ChangeState_NO+1))

#define _pb_motors_MotorCommand_MIN pb_motors_MotorCommand_DRIVE
#define _pb_motors_MotorCommand_MAX pb_motors_MotorCommand_ZMIN
#define _pb_motors_MotorCommand_ARRAYSIZE ((pb_motors_MotorCommand)(pb_motors_MotorCommand_ZMIN+1))

#define _pb_motors_MotorName_MIN pb_motors_MotorName_X
#define _pb_motors_MotorName_MAX pb_motors_MotorName_Z
#define _pb_motors_MotorName_ARRAYSIZE ((pb_motors_MotorName)(pb_motors_MotorName_Z+1))

#define _pb_motors_MotorDir_MIN pb_motors_MotorDir_CC
#define _pb_motors_MotorDir_MAX pb_motors_MotorDir_CCW
#define _pb_motors_MotorDir_ARRAYSIZE ((pb_motors_MotorDir)(pb_motors_MotorDir_CCW+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define pb_motors_init_default                   {"", false, "", false, false, false, pb_motors_MotorX_init_default, false, pb_motors_MotorY_init_default, false, pb_motors_MotorZ_init_default}
#define pb_motors_MotorX_init_default            {false, pb_motors_ChangeState_NO, false, pb_motors_MotorCommand_HALT, false, pb_motors_MotorName_X, false, _pb_motors_MotorDir_MIN, false, 0, false, 0}
#define pb_motors_MotorY_init_default            {false, pb_motors_ChangeState_NO, false, pb_motors_MotorCommand_HALT, false, pb_motors_MotorName_Y, false, _pb_motors_MotorDir_MIN, false, 0, false, 0}
#define pb_motors_MotorZ_init_default            {false, pb_motors_ChangeState_NO, false, pb_motors_MotorCommand_HALT, false, pb_motors_MotorName_Z, false, _pb_motors_MotorDir_MIN, false, 0, false, 0}
#define pb_motors_init_zero                      {"", false, "", false, 0, false, pb_motors_MotorX_init_zero, false, pb_motors_MotorY_init_zero, false, pb_motors_MotorZ_init_zero}
#define pb_motors_MotorX_init_zero               {false, _pb_motors_ChangeState_MIN, false, _pb_motors_MotorCommand_MIN, false, _pb_motors_MotorName_MIN, false, _pb_motors_MotorDir_MIN, false, 0, false, 0}
#define pb_motors_MotorY_init_zero               {false, _pb_motors_ChangeState_MIN, false, _pb_motors_MotorCommand_MIN, false, _pb_motors_MotorName_MIN, false, _pb_motors_MotorDir_MIN, false, 0, false, 0}
#define pb_motors_MotorZ_init_zero               {false, _pb_motors_ChangeState_MIN, false, _pb_motors_MotorCommand_MIN, false, _pb_motors_MotorName_MIN, false, _pb_motors_MotorDir_MIN, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define pb_motors_MotorX_chgstate_tag            1
#define pb_motors_MotorX_cmd_tag                 2
#define pb_motors_MotorX_motorname_tag           3
#define pb_motors_MotorX_dir_tag                 4
#define pb_motors_MotorX_steps_tag               5
#define pb_motors_MotorX_rpm_tag                 6
#define pb_motors_MotorY_chgstate_tag            1
#define pb_motors_MotorY_cmd_tag                 2
#define pb_motors_MotorY_motorname_tag           3
#define pb_motors_MotorY_dir_tag                 4
#define pb_motors_MotorY_steps_tag               5
#define pb_motors_MotorY_rpm_tag                 6
#define pb_motors_MotorZ_chgstate_tag            1
#define pb_motors_MotorZ_cmd_tag                 2
#define pb_motors_MotorZ_motorname_tag           3
#define pb_motors_MotorZ_dir_tag                 4
#define pb_motors_MotorZ_steps_tag               5
#define pb_motors_MotorZ_rpm_tag                 6
#define pb_motors_msgversion_tag                 1
#define pb_motors_timestamp_tag                  2
#define pb_motors_manualmove_tag                 3
#define pb_motors_motorx_tag                     4
#define pb_motors_motory_tag                     5
#define pb_motors_motorz_tag                     6

/* Struct field encoding specification for nanopb */
#define pb_motors_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, STRING,   msgversion,        1) \
X(a, STATIC,   OPTIONAL, STRING,   timestamp,         2) \
X(a, STATIC,   OPTIONAL, BOOL,     manualmove,        3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  motorx,            4) \
X(a, STATIC,   OPTIONAL, MESSAGE,  motory,            5) \
X(a, STATIC,   OPTIONAL, MESSAGE,  motorz,            6)
#define pb_motors_CALLBACK NULL
#define pb_motors_DEFAULT (const pb_byte_t*)"\x18\x00\x00"
#define pb_motors_motorx_MSGTYPE pb_motors_MotorX
#define pb_motors_motory_MSGTYPE pb_motors_MotorY
#define pb_motors_motorz_MSGTYPE pb_motors_MotorZ

#define pb_motors_MotorX_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, UENUM,    chgstate,          1) \
X(a, STATIC,   OPTIONAL, UENUM,    cmd,               2) \
X(a, STATIC,   OPTIONAL, UENUM,    motorname,         3) \
X(a, STATIC,   OPTIONAL, UENUM,    dir,               4) \
X(a, STATIC,   OPTIONAL, INT32,    steps,             5) \
X(a, STATIC,   OPTIONAL, INT32,    rpm,               6)
#define pb_motors_MotorX_CALLBACK NULL
#define pb_motors_MotorX_DEFAULT (const pb_byte_t*)"\x08\x01\x10\x01\x00"

#define pb_motors_MotorY_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, UENUM,    chgstate,          1) \
X(a, STATIC,   OPTIONAL, UENUM,    cmd,               2) \
X(a, STATIC,   OPTIONAL, UENUM,    motorname,         3) \
X(a, STATIC,   OPTIONAL, UENUM,    dir,               4) \
X(a, STATIC,   OPTIONAL, INT32,    steps,             5) \
X(a, STATIC,   OPTIONAL, INT32,    rpm,               6)
#define pb_motors_MotorY_CALLBACK NULL
#define pb_motors_MotorY_DEFAULT (const pb_byte_t*)"\x08\x01\x10\x01\x18\x01\x00"

#define pb_motors_MotorZ_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, UENUM,    chgstate,          1) \
X(a, STATIC,   OPTIONAL, UENUM,    cmd,               2) \
X(a, STATIC,   OPTIONAL, UENUM,    motorname,         3) \
X(a, STATIC,   OPTIONAL, UENUM,    dir,               4) \
X(a, STATIC,   OPTIONAL, INT32,    steps,             5) \
X(a, STATIC,   OPTIONAL, INT32,    rpm,               6)
#define pb_motors_MotorZ_CALLBACK NULL
#define pb_motors_MotorZ_DEFAULT (const pb_byte_t*)"\x08\x01\x10\x01\x18\x02\x00"

extern const pb_msgdesc_t pb_motors_msg;
extern const pb_msgdesc_t pb_motors_MotorX_msg;
extern const pb_msgdesc_t pb_motors_MotorY_msg;
extern const pb_msgdesc_t pb_motors_MotorZ_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define pb_motors_fields &pb_motors_msg
#define pb_motors_MotorX_fields &pb_motors_MotorX_msg
#define pb_motors_MotorY_fields &pb_motors_MotorY_msg
#define pb_motors_MotorZ_fields &pb_motors_MotorZ_msg

/* Maximum encoded size of messages (where known) */
#define pb_motors_size                           172
#define pb_motors_MotorX_size                    30
#define pb_motors_MotorY_size                    30
#define pb_motors_MotorZ_size                    30

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
